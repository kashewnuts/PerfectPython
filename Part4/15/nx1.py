import networkx as nx


def main():

    # edge のリストを渡して初期化
    g = nx.Graph([(0, 1),
                  (1, 2),
                  (2, 3),
                  (10, 20),
                  (20, 30),
                  (30, 40),
                  (40, 10)])

    # node を辞書で取得する
    print(g.node) #=> {0: {}, 1: {}, 2: {}, 3: {},
                  #    10: {}, 20: {}, 30: {}, 40: {}}

    # node のリストを取得する
    print(g.nodes()) #=> [0, 1, 2, 3, 40, 10, 20, 30]


    # edge の接続情報を含めた辞書を取得する
    # キーが接続元 node 名、値が接続先 node 名
    print(g.edge) #=> {0: {1: {}},
                  #    1: {0: {}, 2: {}},
                  #    2: {1: {}, 3: {}},
                  #    3: {2: {}},
                  #    10: {20: {}, 40: {}},
                  #    20: {10: {}, 30: {}},
                  #    30: {20: {}, 40: {}},
                  #    40: {10: {}, 30: {}}}


    # edge のリストを取得する
    print(g.edges()) #=> [(0, 1), (1, 2), (2, 3),
                     #    (40, 10), (40, 30), (10, 20), (20, 30)]


    # node から出ている edge の数の辞書を返す
    print(g.degree()) #=> {0: 1, 1: 2, 2: 2, 3: 1,
                      #    10: 2, 20: 2, 30: 2, 40: 2}

    # Graph のインスタンスに対して node をインデックスアクセスすると、
    # 接続している edge の情報が取れる
    print(g[1]) #=> {0: {}, 2: {}}



if __name__ == '__main__':
    main()

